{"ast":null,"code":"var _jsxFileName = \"/home/maxdeckmyn/Documents/2-projects-per-month/January/MathQuiz/ui/src/Question.jsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://127.0.0.1:8000/api';\nasync function fetchData() {\n  // eslint-disable-next-line no-template-curly-in-string\n\n  const response = await fetch(\"${API_URL}/generate\", {\n    body: \"{\\n}\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    method: \"POST\"\n  });\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return response.json();\n}\nfunction Question() {\n  _s();\n  const {\n    data,\n    isError,\n    isLoading\n  } = useQuery(['generate'], fetchData);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 27\n  }, this);\n  if (isError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error fetching data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card text-bg-info mb-3 container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Question, \"DkCu/M/H/qJBve+1UG/TeE5/z38=\", false, function () {\n  return [useQuery];\n});\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["useQuery","React","jsxDEV","_jsxDEV","API_URL","fetchData","response","fetch","body","headers","Accept","method","ok","Error","json","Question","_s","data","isError","isLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/maxdeckmyn/Documents/2-projects-per-month/January/MathQuiz/ui/src/Question.jsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\nimport React from \"react\";\n\nconst API_URL = 'http://127.0.0.1:8000/api';\n\nasync function fetchData() {\n    // eslint-disable-next-line no-template-curly-in-string\n\n    const response = await fetch(\"${API_URL}/generate\", {\n        body: \"{\\n}\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        method: \"POST\"\n    });\n\n    if (!response.ok) {\n        throw new Error('Network response was not ok');\n    }\n    return response.json();\n}\n\nfunction Question() {\n    const { data, isError, isLoading } = useQuery(['generate'], fetchData);\n\n    if (isLoading) return <div>Loading...</div>;\n    if (isError) return <div>Error fetching data</div>;\n\n    return (\n        <div className=\"card text-bg-info mb-3 container\">\n            <div className=\"card-header\">{data}</div>\n            <div className=\"card-body\">\n                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Question;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,eAAeC,SAASA,CAAA,EAAG;EACvB;;EAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAqB,EAAE;IAChDC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE;MACLC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IACpB,CAAC;IACDC,MAAM,EAAE;EACZ,CAAC,CAAC;EAEF,IAAI,CAACL,QAAQ,CAACM,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAClD;EACA,OAAOP,QAAQ,CAACQ,IAAI,CAAC,CAAC;AAC1B;AAEA,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAGnB,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAEK,SAAS,CAAC;EAEtE,IAAIc,SAAS,EAAE,oBAAOhB,OAAA;IAAAiB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC3C,IAAIN,OAAO,EAAE,oBAAOf,OAAA;IAAAiB,QAAA,EAAK;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAElD,oBACIrB,OAAA;IAAKsB,SAAS,EAAC,kCAAkC;IAAAL,QAAA,gBAC7CjB,OAAA;MAAKsB,SAAS,EAAC,aAAa;MAAAL,QAAA,EAAEH;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACzCrB,OAAA;MAAKsB,SAAS,EAAC,WAAW;MAAAL,QAAA,eACtBjB,OAAA;QAAGsB,SAAS,EAAC,WAAW;QAAAL,QAAA,EAAC;MAA8F;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1H,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACR,EAAA,CAdQD,QAAQ;EAAA,QACwBf,QAAQ;AAAA;AAAA0B,EAAA,GADxCX,QAAQ;AAgBjB,eAAeA,QAAQ;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}